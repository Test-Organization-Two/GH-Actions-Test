# use a workflow run to watch for a PR, download the PR artifact and trigger a sonar scan

name: Run Sonar Scan

on:
  workflow_run:
    workflows: ["Receive PR"]
    types:
      - completed
  push:
    branches:
      - main

jobs:
  build-PR:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Downlod Artifacts 
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
        
      - name: Read PR number
        run: |
          cat ./pr/NR
          echo "PR_NUMBER=$(cat ./pr/NR)" >> $GITHUB_ENV
      # checkout the PR
      - name: Checkout PR
        uses: actions/checkout@v2
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/merge
          fetch-depth: 0
      # dump github context
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      # find pull request in github context and save head ref and base ref in env
      - name: Find PR in GitHub context
        id: find_pr
        run: |
          echo $GITHUB_CONTEXT | jq '.event.pull_request.head.ref'
          echo $GITHUB_CONTEXT | jq '.event.pull_request.base.ref'

      - name: output PR info
        run: |
          cat $GITHUB_OUTPUT
          echo ${{ env.pr_head_ref }}
          echo ${{ env.pr_base_ref }}



      # run sonar scan put PR info into sonar properties using with args
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.pullrequest.key=${{ env.PR_NUMBER }}
            -Dsonar.pullrequest.branch=${{ env.pr_head_ref }}
            -Dsonar.pullrequest.base=${{ env.pr_base_ref }}


  # build-main:
  #   runs-on: ubuntu-latest
  #   # if the workflow run is not a PR, run a normal scan
  #   if: >
  #     github.event_name == 'push' &&
  #     github.event.workflow_run.event != 'pull_request'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Sonar Scan
  #       uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

